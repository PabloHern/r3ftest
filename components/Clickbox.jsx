/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.2.13 clickbox001blend.gltf --transform 
Files: clickbox001blend.gltf [5.37KB] > clickbox001blend-transformed.glb [1.2KB] (78%)
*/

import React, { useRef, useState } from 'react'
import * as THREE from 'three'
import { useGLTF } from '@react-three/drei'
import { useFrame, useThree } from '@react-three/fiber'

export function Clickbox(props) {
  const { nodes, materials } = useGLTF('models/clickbox/clickbox001blend-transformed.glb')
  const [active, setActive] = useState(false)
  const { gl, scene, camera } = useThree();
  const initialCamera = camera
  const clickBox = useRef()

  function toggle() {
    console.log(clickBox.current.position)
    console.log(initialCamera.position)
    // camera.position = [clickBox.current.position.x, clickBox.current.position.y, initialCamera.z]
    camera.position.set(clickBox.current.position.x, clickBox.current.position.y / 2, initialCamera.position.z)
    console.log(camera.position)
  }
  return (
    <group {...props} dispose={null} ref={clickBox}>
      {console.log(materials)}
      <mesh onClick={(e) => toggle()} geometry={nodes.Cube.geometry} material={new THREE.MeshStandardMaterial({
        color: 0xff0000,
        linewidth: 1,
        transparent: true,
        opacity: 0.5,
        linecap: 'round',
        linejoin: 'round'
      })} />
    </group>
  )
}

useGLTF.preload('models/clickbox/clickbox001blend-transformed.glb')
